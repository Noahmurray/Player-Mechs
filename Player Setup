# Player Setup



using UnityEngine;
using UnityEngine.Networking;


[RequireComponent(typeof(Player))]
public class PlayerSetup : NetworkBehaviour {

    [SerializeField]
    Behaviour[] componentsToDisable;

    [SerializeField]
    string remoteLayerName = "RemotePlayer";

    Camera sceneCamera;

    void Start ()
    {


        if (!isLocalPlayer)
        {
            DisableComponents();
            AssignRemoteLayer();
        
        
        } else 
        
        {
            sceneCamera = Camera.main;

            if (sceneCamera != null)
            {
                sceneCamera.gameObject.SetActive(false);
            }
        }

    }

	public override void OnStartClient()
	{
        base.OnStartClient();

        string _netID = GetComponent<NetworkIdentity>().netId.ToString();
        Player _player = GetComponent<Player>();

        GManager.RegisterPlayer(_netID, _player);
	}

	void RegisterPlayer () 
    {
        string _ID = "Player" + GetComponent<NetworkIdentity>().netId;
        transform.name = _ID;
    }


    void AssignRemoteLayer () 
    {
        gameObject.layer = LayerMask.NameToLayer(remoteLayerName);
    }

    void DisableComponents () 
    {
        for (int i = 0; i < componentsToDisable.Length; i++)
        {
            componentsToDisable[i].enabled = false;
        }
    }



     void OnDisable()
	{
        if (sceneCamera != null) 
        {
            sceneCamera.gameObject.SetActive(true);
        }

        GManager.UnRegisterPlayer(transform.name);
    
    }




}
